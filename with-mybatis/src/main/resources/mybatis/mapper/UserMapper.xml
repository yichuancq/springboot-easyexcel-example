<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="example.model.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="example.model.user.UserInfo">
        <id column="user_id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="user_sex" property="userSex"
                javaType="example.model.user.UserSexEnum"
                jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <collection property="sysRoleList" resultMap="BatchListRoleResultMap"/>
    </resultMap>
    <!--role-->
    <resultMap id="BatchListRoleResultMap" type="example.model.role.SysRole">
        <id column="role_id" property="id" jdbcType="INTEGER"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <!--角色状态-->
        <result column="role_status" property="roleStatus"
                javaType="example.model.role.RoleStatusEnum"
                jdbcType="VARCHAR"/>
        <result column="memo" property="memo" jdbcType="VARCHAR"/>
    </resultMap>
    <!--基础类List-->
    <sql id="Base_Column_List">
        user_id, name, age,user_sex, address,email
    </sql>

    <!--通过ID删除-->
    <delete id="deleteOneById">
      delete from user_info where user_id=#{userId}
    </delete>
    <!--返回所有记录-->
    <select id="getAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user_info
    </select>
    <!--分页查询-->
    <select id="selectPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user_info
    </select>

    <!-- 通过ID查询-->
    <select id="findOneById" parameterType="long" resultType="example.model.user.UserInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user_info where 1=1 and user_id=#{userId}

    </select>

    <!--通过用户ID查询角色-->
    <select id="findUserRolesByUserId"
            resultMap="BaseResultMap"
            resultType="example.model.user.UserInfo">
        select r.role_id, r.role_name,r.role_status,r.create_time,r.update_time,r.memo,r.version,
           u.user_id as id,
           u.name as name,
           u.user_sex as userSex
          from user_info u
            left join sys_user_role ur on ur.user_id=u.user_id
            left join sys_role r on  r.role_id=ur.role_id
          and u.user_id=#{userId}
    </select>
    <!--save addUserInfo-->
    <insert id="addUserInfo"
            useGeneratedKeys="true"
            keyColumn="user_id"
            keyProperty="id"
            parameterType="example.model.user.UserInfo">
        INSERT INTO user_info(name, age,user_sex, address,email,create_time,update_time,version)
           VALUES (#{name},#{age},#{userSex},#{address},#{email},now(),now(),0)
    </insert>
    <!-- 用户信息批量保存-->
    <insert id="addAllUserInfo"
            parameterType="java.util.List" useGeneratedKeys="true"
            keyColumn="user_id"
            keyProperty="id">
        insert into user_info (name, age,user_sex, address,email,create_time,update_time,version)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.name},#{item.age},#{item.userSex},#{item.address},#{item.email},now(),now(),0)
        </foreach>
    </insert>
</mapper>