<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="example.model.mapper.SysRoleMapper">

    <resultMap id="BaseResultMap" type="example.model.role.SysRole">
        <id column="role_id" property="id" jdbcType="BIGINT"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <!--角色状态-->
        <result column="role_status" property="roleStatus"
                javaType="example.model.role.RoleStatusEnum"
                jdbcType="VARCHAR"/>
        <result column="memo" property="memo" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="version" property="version" jdbcType="BIGINT"/>
        <!--权限-->
        <collection property="sysPermissionList" resultMap="BatchListPermissionResultMap"/>
    </resultMap>
    <!--rolePermission-->
    <resultMap id="BatchListPermissionResultMap" type="example.model.permission.SysPermission">
        <id column="permission_id" property="id" jdbcType="BIGINT"/>
        <id column="parent_id" property="parentId" jdbcType="BIGINT"/>
        <result column="permission_name" property="permissionName" jdbcType="VARCHAR"/>
        <result column="memo" property="memo" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="version" property="version" jdbcType="BIGINT"/>
    </resultMap>
    <!--基础类List-->
    <sql id="Base_Column_List">
        role_id, role_name, role_status,memo, create_time,update_time,version
    </sql>
    <!--save role-->
    <insert id="addSysRole"
            useGeneratedKeys="true"
            keyColumn="role_id"
            keyProperty="id"
            parameterType="example.model.role.SysRole">
       INSERT INTO sys_role(role_name,role_status,memo,create_time,update_time,version)
           VALUES ( #{roleName}, #{roleStatus}, #{memo}, now(), now(),0)

    </insert>

    <!-- 通过ID查询-->
    <select id="findOneById" parameterType="long" resultType="example.model.role.SysRole">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sys_role WHERE 1=1 AND role_id=#{roleId}
    </select>

    <!--查询角色的权限-->
    <select id="selectPermissionsByRoleId"
            parameterType="long"
            resultType="example.model.permission.SysPermission">
        SELECT p.permission_id AS id, <!--注意用别名和实体字段一一对应-->
        p.permission_name AS permissionName,<!--注意用别名和实体字段一一对应-->
        p.url AS url,<!--注意用别名和实体字段一一对应-->
        p.element_type AS elementTypeEnum,<!--注意用别名和实体字段一一对应-->
        p.memo AS memo,
        p.parent_id AS parentId<!--注意用别名和实体字段一一对应-->
        FROM sys_permission p
        INNER JOIN sys_role_permission rp ON rp.permission_id=p.permission_id
        INNER JOIN sys_role r ON r.role_id= rp.role_id
        AND r.role_id=#{roleId}
    </select>
</mapper>